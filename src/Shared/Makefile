### Generated by Winemaker 0.8.4
###
### Invocation command line was
### /usr/local/bin/winemaker --nobackup -idll --mfc .


SRCDIR                = .
DLLS                  =
LIBS                  = libbass.a \
			libcdx.a \
			libcdxd.a \
			liblibpngd.a \
			liblibpngr.a \
			libzlibd.a \
			libzlibr.a
EXES                  =



### Common settings

CEXTRA                = -mno-cygwin
CXXEXTRA              =
RCEXTRA               =
DEFINES               =
INCLUDE_PATH          = -I. \
			$(MFC_INCLUDE_PATH)
DLL_PATH              =
DLL_IMPORTS           = dll
LIBRARY_PATH          =
LIBRARIES             =


### Extra source lists

EXTRA_C_SRCS          =
EXTRA_CXX_SRCS        = ASL.cpp \
			Char.cpp \
			ConfigFile.cpp \
			FileParse.cpp \
			GPDLcomp.cpp \
			GPDLexec.cpp \
			GameEvent.cpp \
			GameRules.cpp \
			GlobalData.cpp \
			Globals.cpp \
			Graphics.cpp \
			Items.cpp \
			Level.cpp \
			Money.cpp \
			Monster.cpp \
			Movie.cpp \
			Party.cpp \
			PicData.cpp \
			PicSlot.cpp \
			Property.cpp \
			RunTimeIF.cpp \
			SoundMgr.cpp \
			Specab.cpp \
			Spell.cpp \
			StackWalker.cpp \
			Timer.cpp \
			Viewport.cpp \
			class.cpp \
			regexp.cpp \
			taglist.cpp \
			traits.cpp
EXTRA_RC_SRCS         =

EXTRA_OBJS            = $(EXTRA_C_SRCS:.c=.o) \
			$(EXTRA_CXX_SRCS:.cpp=.o)



### libbass.a sources and settings

libbass_a_MODULE      = libbass.a
libbass_a_C_SRCS      =
libbass_a_CXX_SRCS    =
libbass_a_RC_SRCS     =
libbass_a_LDFLAGS     = -mno-cygwin
libbass_a_ARFLAGS     = rc
libbass_a_DLL_PATH    = $(MFC_LIBRARY_PATH)
libbass_a_DLLS        = odbc32 \
			ole32 \
			oleaut32 \
			winspool \
			odbccp32 \
			mfc.dll
libbass_a_LIBRARY_PATH= $(MFC_LIBRARY_PATH)
libbass_a_LIBRARIES   = uuid \
			mfc

libbass_a_OBJS        = $(libbass_a_C_SRCS:.c=.o) \
			$(libbass_a_CXX_SRCS:.cpp=.o) \
			$(libbass_a_RC_SRCS:.rc=.res)



### libcdx.a sources and settings

libcdx_a_MODULE       = libcdx.a
libcdx_a_C_SRCS       =
libcdx_a_CXX_SRCS     =
libcdx_a_RC_SRCS      =
libcdx_a_LDFLAGS      = -mno-cygwin
libcdx_a_ARFLAGS      = rc
libcdx_a_DLL_PATH     = $(MFC_LIBRARY_PATH)
libcdx_a_DLLS         = odbc32 \
			ole32 \
			oleaut32 \
			winspool \
			odbccp32 \
			mfc.dll
libcdx_a_LIBRARY_PATH = $(MFC_LIBRARY_PATH)
libcdx_a_LIBRARIES    = uuid \
			mfc

libcdx_a_OBJS         = $(libcdx_a_C_SRCS:.c=.o) \
			$(libcdx_a_CXX_SRCS:.cpp=.o) \
			$(libcdx_a_RC_SRCS:.rc=.res)



### libcdxd.a sources and settings

libcdxd_a_MODULE      = libcdxd.a
libcdxd_a_C_SRCS      =
libcdxd_a_CXX_SRCS    =
libcdxd_a_RC_SRCS     =
libcdxd_a_LDFLAGS     = -mno-cygwin
libcdxd_a_ARFLAGS     = rc
libcdxd_a_DLL_PATH    = $(MFC_LIBRARY_PATH)
libcdxd_a_DLLS        = odbc32 \
			ole32 \
			oleaut32 \
			winspool \
			odbccp32 \
			mfc.dll
libcdxd_a_LIBRARY_PATH= $(MFC_LIBRARY_PATH)
libcdxd_a_LIBRARIES   = uuid \
			mfc

libcdxd_a_OBJS        = $(libcdxd_a_C_SRCS:.c=.o) \
			$(libcdxd_a_CXX_SRCS:.cpp=.o) \
			$(libcdxd_a_RC_SRCS:.rc=.res)



### liblibpngd.a sources and settings

liblibpngd_a_MODULE   = liblibpngd.a
liblibpngd_a_C_SRCS   =
liblibpngd_a_CXX_SRCS =
liblibpngd_a_RC_SRCS  =
liblibpngd_a_LDFLAGS  = -mno-cygwin
liblibpngd_a_ARFLAGS  = rc
liblibpngd_a_DLL_PATH = $(MFC_LIBRARY_PATH)
liblibpngd_a_DLLS     = odbc32 \
			ole32 \
			oleaut32 \
			winspool \
			odbccp32 \
			mfc.dll
liblibpngd_a_LIBRARY_PATH= $(MFC_LIBRARY_PATH)
liblibpngd_a_LIBRARIES= uuid \
			mfc

liblibpngd_a_OBJS     = $(liblibpngd_a_C_SRCS:.c=.o) \
			$(liblibpngd_a_CXX_SRCS:.cpp=.o) \
			$(liblibpngd_a_RC_SRCS:.rc=.res)



### liblibpngr.a sources and settings

liblibpngr_a_MODULE   = liblibpngr.a
liblibpngr_a_C_SRCS   =
liblibpngr_a_CXX_SRCS =
liblibpngr_a_RC_SRCS  =
liblibpngr_a_LDFLAGS  = -mno-cygwin
liblibpngr_a_ARFLAGS  = rc
liblibpngr_a_DLL_PATH = $(MFC_LIBRARY_PATH)
liblibpngr_a_DLLS     = odbc32 \
			ole32 \
			oleaut32 \
			winspool \
			odbccp32 \
			mfc.dll
liblibpngr_a_LIBRARY_PATH= $(MFC_LIBRARY_PATH)
liblibpngr_a_LIBRARIES= uuid \
			mfc

liblibpngr_a_OBJS     = $(liblibpngr_a_C_SRCS:.c=.o) \
			$(liblibpngr_a_CXX_SRCS:.cpp=.o) \
			$(liblibpngr_a_RC_SRCS:.rc=.res)



### libzlibd.a sources and settings

libzlibd_a_MODULE     = libzlibd.a
libzlibd_a_C_SRCS     =
libzlibd_a_CXX_SRCS   =
libzlibd_a_RC_SRCS    =
libzlibd_a_LDFLAGS    = -mno-cygwin
libzlibd_a_ARFLAGS    = rc
libzlibd_a_DLL_PATH   = $(MFC_LIBRARY_PATH)
libzlibd_a_DLLS       = odbc32 \
			ole32 \
			oleaut32 \
			winspool \
			odbccp32 \
			mfc.dll
libzlibd_a_LIBRARY_PATH= $(MFC_LIBRARY_PATH)
libzlibd_a_LIBRARIES  = uuid \
			mfc

libzlibd_a_OBJS       = $(libzlibd_a_C_SRCS:.c=.o) \
			$(libzlibd_a_CXX_SRCS:.cpp=.o) \
			$(libzlibd_a_RC_SRCS:.rc=.res)



### libzlibr.a sources and settings

libzlibr_a_MODULE     = libzlibr.a
libzlibr_a_C_SRCS     =
libzlibr_a_CXX_SRCS   =
libzlibr_a_RC_SRCS    =
libzlibr_a_LDFLAGS    = -mno-cygwin
libzlibr_a_ARFLAGS    = rc
libzlibr_a_DLL_PATH   = $(MFC_LIBRARY_PATH)
libzlibr_a_DLLS       = odbc32 \
			ole32 \
			oleaut32 \
			winspool \
			odbccp32 \
			mfc.dll
libzlibr_a_LIBRARY_PATH= $(MFC_LIBRARY_PATH)
libzlibr_a_LIBRARIES  = uuid \
			mfc

libzlibr_a_OBJS       = $(libzlibr_a_C_SRCS:.c=.o) \
			$(libzlibr_a_CXX_SRCS:.cpp=.o) \
			$(libzlibr_a_RC_SRCS:.rc=.res)



### Global source lists

C_SRCS                = $(libbass_a_C_SRCS) \
			$(libcdx_a_C_SRCS) \
			$(libcdxd_a_C_SRCS) \
			$(liblibpngd_a_C_SRCS) \
			$(liblibpngr_a_C_SRCS) \
			$(libzlibd_a_C_SRCS) \
			$(libzlibr_a_C_SRCS) \
			$(EXTRA_C_SRCS)
CXX_SRCS              = $(libbass_a_CXX_SRCS) \
			$(libcdx_a_CXX_SRCS) \
			$(libcdxd_a_CXX_SRCS) \
			$(liblibpngd_a_CXX_SRCS) \
			$(liblibpngr_a_CXX_SRCS) \
			$(libzlibd_a_CXX_SRCS) \
			$(libzlibr_a_CXX_SRCS) \
			$(EXTRA_CXX_SRCS)
RC_SRCS               = $(libbass_a_RC_SRCS) \
			$(libcdx_a_RC_SRCS) \
			$(libcdxd_a_RC_SRCS) \
			$(liblibpngd_a_RC_SRCS) \
			$(liblibpngr_a_RC_SRCS) \
			$(libzlibd_a_RC_SRCS) \
			$(libzlibr_a_RC_SRCS) \
			$(EXTRA_RC_SRCS)


### Tools

CC = winegcc
CXX = wineg++
RC = wrc
AR = ar


### Generic targets

all: $(DLLS:%=%.so) $(LIBS) $(EXES)

### Build rules

.PHONY: all clean dummy

$(SUBDIRS): dummy
	@cd $@ && $(MAKE)

# Implicit rules

.SUFFIXES: .cpp .cxx .rc .res
DEFINCL = $(INCLUDE_PATH) $(DEFINES) $(OPTIONS)

.c.o:
	$(CC) -c $(CFLAGS) $(CEXTRA) $(DEFINCL) -o $@ $<

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(CXXEXTRA) $(DEFINCL) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(CXXEXTRA) $(DEFINCL) -o $@ $<

.rc.res:
	$(RC) $(RCFLAGS) $(RCEXTRA) $(DEFINCL) -fo$@ $<

# Rules for cleaning

CLEAN_FILES     = y.tab.c y.tab.h lex.yy.c core *.orig *.rej \
                  \\\#*\\\# *~ *% .\\\#*

clean:: $(SUBDIRS:%=%/__clean__) $(EXTRASUBDIRS:%=%/__clean__)
	$(RM) $(CLEAN_FILES) $(RC_SRCS:.rc=.res) $(C_SRCS:.c=.o) $(CXX_SRCS:.cpp=.o)
	$(RM) $(DLLS:%=%.so) $(LIBS) $(EXES) $(EXES:%=%.so)

$(SUBDIRS:%=%/__clean__): dummy
	cd `dirname $@` && $(MAKE) clean

$(EXTRASUBDIRS:%=%/__clean__): dummy
	-cd `dirname $@` && $(RM) $(CLEAN_FILES)

### Target specific build rules
DEFLIB = $(LIBRARY_PATH) $(LIBRARIES) $(DLL_PATH) $(DLL_IMPORTS:%=-l%)

$(libbass_a_MODULE): $(libbass_a_OBJS)
	$(AR) $(libbass_a_ARFLAGS) $@ $(libbass_a_OBJS)


$(libcdx_a_MODULE): $(libcdx_a_OBJS)
	$(AR) $(libcdx_a_ARFLAGS) $@ $(libcdx_a_OBJS)


$(libcdxd_a_MODULE): $(libcdxd_a_OBJS)
	$(AR) $(libcdxd_a_ARFLAGS) $@ $(libcdxd_a_OBJS)


$(liblibpngd_a_MODULE): $(liblibpngd_a_OBJS)
	$(AR) $(liblibpngd_a_ARFLAGS) $@ $(liblibpngd_a_OBJS)


$(liblibpngr_a_MODULE): $(liblibpngr_a_OBJS)
	$(AR) $(liblibpngr_a_ARFLAGS) $@ $(liblibpngr_a_OBJS)


$(libzlibd_a_MODULE): $(libzlibd_a_OBJS)
	$(AR) $(libzlibd_a_ARFLAGS) $@ $(libzlibd_a_OBJS)


$(libzlibr_a_MODULE): $(libzlibr_a_OBJS)
	$(AR) $(libzlibr_a_ARFLAGS) $@ $(libzlibr_a_OBJS)


